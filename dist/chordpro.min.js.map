{"version":3,"sources":["chordpro.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","chordpro","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","Add9","Add11","Major6","SixNine","PowerChord","2","Major7","Minor7","Dominant7","Diminished7","Major9","Major11","Major13","AugmentedDominant7","AugmentedMajor7","Minor9","3","Major","Minor","Augmented","Diminished","4","initializeChordRegexes","map","Object","keys","noteNamings","forEach","noteNaming","initializeChordRegex","chordRegex","regexString","createRegexString","regexStringWithParens","createRegexStringWithParens","pattern","RegExp","patternWithParens","optional","concatenateAllValues","res","key","concat","concatenateAllValuesForExtendeds","greedyDisjunction","chordQualities","chordExtendeds","chordAddeds","chordSuspendeds","quote","str","regexpSpecialChars","replace","aliases","matchingGroup","slice","sort","b","lenCompare","alias","chordRegexes","./chord-addeds","./chord-extendeds","./chord-qualities","./chord-suspendeds","./note-namings","5","6","Sus4","Sus2","7","parse","prettyPrint","transpose","./parse","./pretty-print","./transpose","8","English","NorthernEuropean","SouthernEuropean","9","parseObject","match","root","reverseLookups","roots","foundExtended","extendeds","quality","extended","qualities","added","addeds","suspended","suspendeds","overridingRoot","substring","opts","naming","./chord-regexes","./reverse-lookups","10","chord","11","addReverseLookups","reverseDict","dict","arr","element","addReverseLookupsForExtendeds","pair","extendedsArr","rootLookups","chordQualitiesLookups","chordExtendedsLookups","chordSuspendedsLookups","chordAddedsLookups","12","transposeNote","note","num","idx","chordRoots","indexOf","clone","transposedChord","./chord-roots","./utils","13","extend","obj","14","undefined","hasOwn","prototype","hasOwnProperty","toString","isPlainObject","nodeType","setInterval","has_own_constructor","has_is_property_of_method","constructor","options","name","src","copy","copyIsArray","target","arguments","deep","Array","isArray","15","addMapEntry","set","addSetEntry","value","add","apply","func","thisArg","args","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","indexOfNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseReduce","baseSortBy","comparer","current","baseTimes","baseToPairs","object","props","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","checkGlobal","countHolders","placeholder","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","getValue","other","isHostObject","iteratorToArray","iterator","data","next","done","push","mapToArray","size","replaceHolders","PLACEHOLDER","setToArray","setToPairs","stringSize","string","reHasComplexSymbol","test","reComplexSymbol","lastIndex","stringToArray","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","type","computed","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","get","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","source","copyObject","baseAt","paths","isNil","baseClamp","number","lower","upper","baseClone","isDeep","isFull","customizer","stack","isObject","initCloneArray","tag","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbols","cloneableTags","initCloneByTag","stacked","getAllKeys","subValue","baseConforms","baseCreate","proto","objectCreate","baseDelay","wait","TypeError","FUNC_ERROR_TEXT","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","isKey","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGt","baseHas","getPrototype","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","parent","last","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objIsObj","othIsObj","isSameTag","isTypedArray","equalArrays","equalByTag","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIsNative","isMasked","reIsNative","reIsHostCtor","toSource","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","nativeKeys","baseKeysIn","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isStrictComparable","hasIn","baseMerge","srcIndex","keysIn","baseMergeDeep","newValue","mergeFunc","isArrayLikeObject","isArguments","toPlainObject","baseNth","isIndex","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","getAllKeysIn","baseProperty","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","MAX_SAFE_INTEGER","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseToNumber","baseToString","symbolToString","INFINITY","baseUniq","createSet","seenIndex","baseUnset","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","buffer","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","reFlags","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","cloneTypedArray","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","getSymbols","createAggregator","initializer","createAssigner","assigner","rest","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBaseWrapper","wrapper","fn","Ctor","isBind","BIND_FLAG","createCtorWrapper","createCaseFirst","methodName","charAt","trailing","join","createCompounder","callback","words","deburr","reApos","thisBinding","createCurryWrapper","arity","getHolder","createRecurryWrapper","createHybridWrapper","createFind","findIndexFunc","createFlow","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","toIteratee","createMathOperation","operator","createOver","arrayFunc","isFlattenableIteratee","createPadding","chars","charsLength","createPartialWrapper","createRange","toNumber","createRelationalOperation","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","newData","setData","createRound","Math","precision","split","createToPairs","mapTag","setTag","createWrapper","mergeData","baseSetData","isPartial","arrValue","othValue","compared","dataViewTag","arrayBufferTag","boolTag","dateTag","errorTag","message","numberTag","regexpTag","stringTag","convert","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","getSymbolsIn","realNames","otherFunc","isKeyable","getNative","nativeGetPrototype","getOwnPropertySymbols","objectToString","transforms","hasPath","hasFunc","isLength","isString","input","isPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","indexKeys","String","reIsUint","reIsPlainProp","reIsDeepProp","maskSrcKey","srcBitmask","newBitmask","isCombo","mergeDefaults","oldArray","funcToString","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flatten","flattenDeep","flattenDepth","fromPairs","pairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","orderBy","reduce","reduceRight","reject","sample","sampleSize","rand","shuffle","some","now","Date","after","before","curry","curryRight","debounce","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","negate","once","otherArgs","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","propertyIsEnumerable","isArrayBuffer","getLength","isBoolean","isDate","isElement","isEmpty","nonEnumShadows","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMap","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","isNull","objectCtorString","isRegExp","isSafeInteger","isSet","typedArrayTags","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","iteratorSymbol","toFinite","sign","MAX_INTEGER","remainder","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","toSafeInteger","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","defaultValue","isProto","skipIndexes","propsLength","mapKeys","mapValues","omitBy","pickBy","setWith","transform","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","freeParseFloat","capitalize","upperFirst","toLowerCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChar","reRegExpChar","pad","strLength","padEnd","padStart","parseInt","radix","nativeParseInt","reHasHexPrefix","repeat","nativeReplace","limit","nativeSplit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","toLower","toUpper","toUpperCase","trim","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","search","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","reHasComplexWord","reComplexWord","reBasicWord","cond","conforms","constant","matches","matchesProperty","mixin","methodNames","noConflict","_","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","id","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","contextProps","arrayProto","stringProto","coreJsData","uid","IE_PROTO","Buffer","moduleExports","Reflect","Symbol","enumerate","ceil","floor","getPrototypeOf","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","ArrayBuffer","resolve","promiseTag","ctorString","count","lastCalled","stamp","remaining","HOT_SPAN","HOT_COUNT","rePropName","reEscapeChar","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","isProp","keyBy","partition","sortBy","bind","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extendWith","each","eachRight","first","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","\\","\n","\r"," "," ","parseFloat","freeExports","freeModule","freeGlobal","freeSelf","thisGlobal","16","factory","nodeName","Mustache","mustache","typeStr","hasProperty","propName","testRegExp","re","regExpTest","isWhitespace","nonSpaceRe","escapeHtml","entityMap","parseTemplate","tags","stripSpace","hasTag","nonSpace","spaces","tokens","compileTags","tagsToCompile","spaceRe","openingTagRe","closingTagRe","closingCurlyRe","sections","token","openSection","scanner","Scanner","eos","pos","scanUntil","valueLength","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","section","nestedTokens","collector","Context","parentContext",".","Writer","/","=","lookup","lookupHit","clearCache","render","renderTokens","originalTemplate","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","subRender","j","version","defaultWriter","to_html","send","17","Song","chordProStr","commentPattern","chordPattern","directivePattern","song","createSection","line","lineText","lines","addSection","createLine","directive","directiveName","directiveValue","chords","createChord","addLineSegment","createLineSegment","lineSegments","addLine","./lib/song","18","getSharpEquivalent","chordText","val","notes","getTranspose","origKey","targetKey","origKeyIdx","targetKeyIdx","getNoteInterval","interval","getKeysContainingChord","intervals","noteChord","minor","getRootNote","intonation","Chord","transposeProperties","chordMagicked","chordMagic","Chords","sharps","getText","getOrigText","getOrigKey","getTargetKey","setTargetKey","setTranspose","chord-magic","19","Section","Line","LineSegment","text","title","subtitle","album","author","copyright","tempo","keywords","lineSegment","songTemplate","formattedChord","formattedText","newText","leadingSpaceCount","trailingSpaceCount","./chords"],"mappings":"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","file":"chordpro.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.chordpro = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  Add9: [\"add9\", \"2\"],\n  Add11: [\"add11\", \"4\"],\n  Major6: [\"6\",\"maj6\",\"major6\", \"M6\"],\n  SixNine: [\"6/9\"],\n  PowerChord: [\"5\"] // duh duh DUH, duh duh DUH-duh, duh duh DUH, duh duh ((c) Deep Purple)\n};\n},{}],2:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  // sevenths\n  Major7: ['Major', [\"maj7\", \"Maj7\", \"M7\", \"+7\"]],\n  Minor7: ['Minor', [\"m7\", \"Min7\", \"min7\", \"minor7\"]],\n  Dominant7: ['Major', [\"7\", \"dom7\", \"dominant7\"]],\n  Diminished7: ['Diminished', [\"dim7\", \"diminished7\"]],\n\n  // true extended\n  Major9: ['Major', [\"maj9\", \"M9\", \"9\"]],\n  Major11: ['Major', [\"maj11\", \"M11\", \"11\"]],\n  Major13: ['Major', [\"maj13\", \"M13\", \"13\"]],\n\n  // weird ones\n  AugmentedDominant7: ['Major', [\"7#5\", \"7(#5]\"]],\n  AugmentedMajor7: ['Major', [\"maj7#5\", \"maj7(#5]\"]],\n\n  // TODO: I don't know what this one is - can't find it on wikipedia\n  Minor9: ['Minor', [\"min9\", \"m9\", \"minor9\"]]\n  \n};\n},{}],3:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  Major:  [\"\", \"major\", \"maj\", \"M\"],\n  Minor:  [\"m\", \"minor\", \"min\"],\n  Augmented: [\"aug\", \"augmented\", \"+\"],\n  Diminished: [\"dim\", \"diminished\"]\n};\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar noteNamings = require('./note-namings');\nvar chordAddeds = require('./chord-addeds');\nvar chordSuspendeds = require('./chord-suspendeds');\nvar chordQualities = require('./chord-qualities');\nvar chordExtendeds = require('./chord-extendeds');\n\nvar chordRegexes = initializeChordRegexes();\n\nmodule.exports = chordRegexes;\n\nfunction initializeChordRegexes() {\n  var map = {};\n\n  Object.keys(noteNamings).forEach(function (noteNaming) {\n    map[noteNaming] = initializeChordRegex(noteNamings[noteNaming]);\n  });\n  return map;\n}\n\nfunction initializeChordRegex(noteNaming) {\n  var chordRegex = {};\n\n  var regexString = createRegexString(noteNaming);\n  var regexStringWithParens = createRegexStringWithParens(regexStringWithParens);\n\n  chordRegex.regexString = regexString;\n  chordRegex.regexStringWithParens = regexStringWithParens;\n  chordRegex.pattern = new RegExp(regexString);\n  chordRegex.patternWithParens = new RegExp(regexStringWithParens);\n\n  return chordRegex;\n}\n\nfunction optional(pattern) {\n  return \"(\" + pattern + \"?)\";\n}\n\nfunction concatenateAllValues(map) {\n  var res = [];\n  Object.keys(map).forEach(function (key) {\n    res = res.concat(map[key]);\n  });\n  return res;\n}\n\n// extendeds are different; their values are an array of\n// [type, names]\nfunction concatenateAllValuesForExtendeds(map) {\n  var res = [];\n  Object.keys(map).forEach(function (key) {\n    res = res.concat(map[key][1]);\n  });\n  return res;\n}\n\nfunction createRegexString(noteNaming) {\n  return greedyDisjunction(concatenateAllValues(noteNaming), true) + // root note\n    optional(greedyDisjunction(\n      concatenateAllValues(chordQualities).concat(\n        concatenateAllValuesForExtendeds(chordExtendeds)))) + // quality OR seventh\n    optional(greedyDisjunction(concatenateAllValues(chordAddeds))) + // add\n    optional(greedyDisjunction(concatenateAllValues(chordSuspendeds))) + // sus\n\n    // overridden root note (\"over\")\n    optional(\"(?:/\" + greedyDisjunction(concatenateAllValues(noteNaming)) +\n      \")\");\n}\n\nfunction createRegexStringWithParens(regexString) {\n  return \"[\\\\(\\\\[]\" + regexString + \"[\\\\)\\\\]]\";\n}\n\nfunction quote(str) {\n  // stolen from http://stackoverflow.com/a/3614500/680742\n  var regexpSpecialChars = /([\\[\\]\\^\\$\\|\\(\\)\\\\\\+\\*\\?\\{\\}\\=\\!])/gi;\n\n  return str.replace(regexpSpecialChars, '\\\\$1');\n}\n\n/**\n * Take an array of strings and make a greedy disjunction regex pattern out of it,\n * with the longest strings first, e.g. [\"sus4\",\"sus\",\"sus2\"] -->\n *\n * (sus4|sus2|sus)\n * @param allAliases\n * @return\n */\nfunction greedyDisjunction(aliases, matchingGroup) {\n\n  aliases = aliases.slice(); // copy\n\n  // sort by longest string first\n  aliases.sort(function (a, b) {\n    var lenCompare = b.length - a.length;\n    if (lenCompare !== 0) {\n      return lenCompare < 0 ? -1 : 1;\n    }\n    // else sort by normal string comparison\n    return a < b ? -1 : 1;\n  });\n\n  var res = '(';\n\n  if (!matchingGroup) {\n    res +=  '?:'; //  non-matching group\n  }\n\n  aliases.forEach(function (alias, i) {\n    if (!alias) {\n      return; // e.g. the \"major\" quality can be expressed as an empty string, so skip in the regex\n    }\n    if (i > 0) {\n      res += '|';\n    }\n    res += quote(alias);\n  });\n\n  return res + ')';\n}\n\ninitializeChordRegexes();\n},{\"./chord-addeds\":1,\"./chord-extendeds\":2,\"./chord-qualities\":3,\"./chord-suspendeds\":6,\"./note-namings\":8}],5:[function(require,module,exports){\n'use strict';\n\nmodule.exports = [\n  'A',\n  'Bb',\n  'B',\n  'C',\n  'Db',\n  'D',\n  'Eb',\n  'E',\n  'F',\n  'Gb',\n  'G',\n  'Ab'\n];\n},{}],6:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  Sus4: [\"sus4\", \"suspended\", \"sus\"],\n  Sus2: [\"sus2\", \"suspended2\"]\n};\n},{}],7:[function(require,module,exports){\n'use strict';\n\nexports.parse = require('./parse');\nexports.prettyPrint = require('./pretty-print');\nexports.transpose = require('./transpose');\n},{\"./parse\":9,\"./pretty-print\":10,\"./transpose\":12}],8:[function(require,module,exports){\n'use strict';\n\nvar English = {};\nEnglish['A'] = ['A'];\nEnglish['Bb'] = ['Bb', 'A#', 'Asharp', 'Bflat'];\nEnglish['B'] = ['B'];\nEnglish['C'] = ['C'];\nEnglish['Db'] = ['Db', 'C#', 'Dflat', 'Csharp'];\nEnglish['D'] = ['D'];\nEnglish['Eb'] = ['Eb', 'D#', 'Eflat', 'Dsharp'];\nEnglish['E'] = ['E'];\nEnglish['F'] = ['F'];\nEnglish['Gb'] = ['Gb', 'F#', 'Gflat', 'Gsharp'];\nEnglish['G'] = ['G'];\nEnglish['Ab'] = ['Ab', 'G#', 'Aflat', 'Gsharp'];\n\nvar NorthernEuropean = {};\nNorthernEuropean['A'] = ['A'];\nNorthernEuropean['Bb'] = ['B', 'A#', 'Asharp'];\nNorthernEuropean['B'] = ['H'];\nNorthernEuropean['C'] = ['C'];\nNorthernEuropean['Db'] = ['Db', 'C#', 'Dflat', 'Csharp'];\nNorthernEuropean['D'] = ['D'];\nNorthernEuropean['Eb'] = ['Eb', 'D#', 'Eflat', 'Dsharp'];\nNorthernEuropean['E'] = ['E'];\nNorthernEuropean['F'] = ['F'];\nNorthernEuropean['Gb'] = ['Gb', 'F#', 'Gflat', 'Gsharp'];\nNorthernEuropean['G'] = ['G'];\nNorthernEuropean['Ab'] = ['Ab', 'G#', 'Aflat', 'Gsharp'];\n\nvar SouthernEuropean = {};\nSouthernEuropean['A'] = ['La'];\nSouthernEuropean['Bb'] = ['Tib', 'La#'];\nSouthernEuropean['B'] = ['Ti'];\nSouthernEuropean['C'] = ['Do'];\nSouthernEuropean['Db'] = ['Reb', 'Réb', 'Do#'];\nSouthernEuropean['D'] = ['Re', 'Ré'];\nSouthernEuropean['Eb'] = ['Mib', 'Re#'];\nSouthernEuropean['E'] = ['Mi'];\nSouthernEuropean['F'] = ['Fa'];\nSouthernEuropean['Gb'] = ['Solb', 'Sob', 'Fa#'];\nSouthernEuropean['G'] = ['Sol', 'So'];\nSouthernEuropean['Ab'] = ['Lab', 'So#', 'Sol#'];\n\nmodule.exports = {\n  English: English,\n  NorthernEuropean: NorthernEuropean,\n  SouthernEuropean: SouthernEuropean\n};\n},{}],9:[function(require,module,exports){\n'use strict';\n\nvar chordRegexes = require('./chord-regexes');\nvar reverseLookups = require('./reverse-lookups');\n\nmodule.exports = function parse(str, opts) {\n  opts = opts || {};\n  var noteNaming = opts.naming || 'English';\n\n  var match = str.match(chordRegexes[noteNaming].pattern);\n\n  return match && parseObject(match, noteNaming);\n};\n\nfunction parseObject(match, noteNaming) {\n\n  // match objects is 6 elements:\n  // full string, root, quality or extended, added, suspended, overriding root\n  // e.g. [\"Cmaj7\", \"C\", \"maj7\", \"\", \"\", \"\"]\n\n  var res = {};\n\n  res.root = reverseLookups.roots[noteNaming][match[1]];\n\n  var foundExtended = reverseLookups.extendeds[match[2]];\n  if (foundExtended) {\n    res.quality = foundExtended.quality;\n    res.extended = foundExtended.extended;\n  } else { // normal quality without extended\n    res.quality = reverseLookups.qualities[match[2]];\n  }\n\n  if (match[3]) {\n    res.added = reverseLookups.addeds[match[3]];\n  }\n\n  if (match[4]) {\n    res.suspended = reverseLookups.suspendeds[match[4]];\n  }\n\n  if (match[5]) {\n    // substring(1) to cut off the slash, because it's e.g. \"/F\"\n    res.overridingRoot = reverseLookups.roots[noteNaming][match[5].substring(1)];\n  }\n\n  return res;\n}\n},{\"./chord-regexes\":4,\"./reverse-lookups\":11}],10:[function(require,module,exports){\n'use strict';\n\nvar noteNamings = require('./note-namings');\nvar chordQualities = require('./chord-qualities');\nvar chordExtendeds = require('./chord-extendeds');\nvar chordAddeds = require('./chord-addeds');\nvar chordSuspendeds = require('./chord-suspendeds');\n\nmodule.exports = function prettyPrint(chord, opts) {\n  opts = opts || {};\n  var naming = opts.naming || 'English';\n  // just use the first name for now, but later we may want to add options\n  // to allow people to choose how to express chord. e.g. to prefer flats\n  // instead of sharps, or prefer certain flats to certain sharps, etc.\n  // (e.g. 'Bb' seems to be more common than 'A#', but 'F#' is more common than 'Ab')\n\n  var str = noteNamings[naming][chord.root][0];\n  if (chord.extended) {\n    str += chordExtendeds[chord.extended][1][0];\n  } else {\n    str += chordQualities[chord.quality][0];\n  }\n\n  if (chord.added) {\n    str += chordAddeds[chord.added][0];\n  }\n\n  if (chord.suspended) {\n    str += chordSuspendeds[chord.suspended][0];\n  }\n\n  if (chord.overridingRoot) {\n    str += '/' + noteNamings[naming][chord.overridingRoot][0];\n  }\n  return str;\n};\n},{\"./chord-addeds\":1,\"./chord-extendeds\":2,\"./chord-qualities\":3,\"./chord-suspendeds\":6,\"./note-namings\":8}],11:[function(require,module,exports){\n'use strict';\n\n// given a string and a note naming, return the structured version of it.\n\nvar rootLookups = {};\n\nvar noteNamings = require('./note-namings');\nvar chordQualities = require('./chord-qualities');\nvar chordExtendeds = require('./chord-extendeds');\nvar chordAddeds = require('./chord-addeds');\nvar chordSuspendeds = require('./chord-suspendeds');\n\nObject.keys(noteNamings).forEach(function (noteNaming) {\n  rootLookups[noteNaming] = {};\n  addReverseLookups(rootLookups[noteNaming], noteNamings[noteNaming]);\n});\n\nvar chordQualitiesLookups = {};\n\naddReverseLookups(chordQualitiesLookups, chordQualities);\n\nvar chordExtendedsLookups = {};\n\naddReverseLookupsForExtendeds(chordExtendedsLookups, chordExtendeds);\n\nvar chordSuspendedsLookups = {};\n\naddReverseLookups(chordSuspendedsLookups, chordSuspendeds);\n\nvar chordAddedsLookups = {};\n\naddReverseLookups(chordAddedsLookups, chordAddeds);\n\nfunction addReverseLookups(reverseDict, dict) {\n  Object.keys(dict).forEach(function (key) {\n    var arr = dict[key];\n    arr.forEach(function (element) {\n      reverseDict[element] = key;\n    });\n  });\n}\n\n// extendeds are a little different, because they contain both the quality\n// and the extendeds\nfunction addReverseLookupsForExtendeds(reverseDict, dict) {\n  Object.keys(dict).forEach(function (key) {\n    var pair = dict[key];\n    var quality = pair[0];\n    var extendedsArr = pair[1];\n    extendedsArr.forEach(function (element) {\n      reverseDict[element] = {\n        quality: quality,\n        extended: key\n      };\n    });\n  });\n}\n\nmodule.exports = {\n  roots: rootLookups,\n  qualities: chordQualitiesLookups,\n  extendeds: chordExtendedsLookups,\n  addeds: chordAddedsLookups,\n  suspendeds: chordSuspendedsLookups\n};\n},{\"./chord-addeds\":1,\"./chord-extendeds\":2,\"./chord-qualities\":3,\"./chord-suspendeds\":6,\"./note-namings\":8}],12:[function(require,module,exports){\n'use strict';\n\nvar chordRoots = require('./chord-roots');\nvar clone = require('./utils').clone;\n\nfunction transposeNote(note, num) {\n\n  var idx = chordRoots.indexOf(note);\n\n  if (idx === -1) {\n    throw new Error('unknown note: ' + note);\n  }\n\n  idx += num;\n\n  if (idx > 0) {\n    idx = idx % chordRoots.length;\n  } else {\n    idx = (chordRoots.length + idx) % chordRoots.length;\n  }\n\n  return chordRoots[idx];\n}\n\nmodule.exports = function transpose(chord, num) {\n  if (typeof num !== 'number') {\n    throw new Error('you need to provide a number');\n  }\n\n  var transposedChord = clone(chord);\n\n  transposedChord.root = transposeNote(chord.root, num);\n\n  if (chord.overridingRoot) {\n    transposedChord.overridingRoot = transposeNote(chord.overridingRoot, num);\n  }\n\n  return transposedChord;\n};\n},{\"./chord-roots\":5,\"./utils\":13}],13:[function(require,module,exports){\n'use strict';\n\nvar extend = require('extend');\n\nexports.extend = extend;\n\nexports.clone = function (obj) {\n  return extend(true, {}, obj);\n};\n},{\"extend\":14}],14:[function(require,module,exports){\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\nvar undefined;\n\nvar isPlainObject = function isPlainObject(obj) {\n\t\"use strict\";\n\tif (!obj || toString.call(obj) !== '[object Object]' || obj.nodeType || obj.setInterval) {\n\t\treturn false;\n\t}\n\n\tvar has_own_constructor = hasOwn.call(obj, 'constructor');\n\tvar has_is_property_of_method = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !has_own_constructor && !has_is_property_of_method) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {}\n\n\treturn key === undefined || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\t\"use strict\";\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === \"boolean\") {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if (typeof target !== \"object\" && typeof target !== \"function\" || target == undefined) {\n\t\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ((options = arguments[i]) != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target === copy) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray(src) ? src : [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if (copy !== undefined) {\n\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n},{}],15:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * lodash <https://lodash.com/>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.13.1';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(\\.|\\[\\])(?:\\4|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match non-compound words composed of alphanumeric characters. */\n  var reBasicWord = /[a-zA-Z0-9]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0x/i;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reComplexWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n    rsUpper + '+' + rsOptUpperContr,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = checkGlobal(typeof global == 'object' && global);\n\n  /** Detect free variable `self`. */\n  var freeSelf = checkGlobal(typeof self == 'object' && self);\n\n  /** Detect `this` as the global object. */\n  var thisGlobal = checkGlobal(typeof this == 'object' && this);\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `Map#set` because it doesn't return the map instance in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    var length = args.length;\n    switch (length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array ? array.length : 0;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array ? array.length : 0;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array ? array.length : 0;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array ? array.length : 0;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing wrapper metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a cache value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Checks if `value` is a global object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n   */\n  function checkGlobal(value) {\n    return (value && value.Object === Object) ? value : null;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        result++;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n    return result;\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    if (!(string && reHasComplexSymbol.test(string))) {\n      return string.length;\n    }\n    var result = reComplexSymbol.lastIndex = 0;\n    while (reComplexSymbol.test(string)) {\n      result++;\n    }\n    return result;\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return string.match(reComplexSymbol);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Use `context` to stub `Date#getTime` use in `_.now`.\n   * var stubbed = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': stubGetTime };\n   *   }\n   * });\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Date = context.Date,\n        Error = context.Error,\n        Math = context.Math,\n        RegExp = context.RegExp,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = context.Array.prototype,\n        objectProto = context.Object.prototype,\n        stringProto = context.String.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = context.Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Reflect = context.Reflect,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        enumerate = Reflect ? Reflect.enumerate : undefined,\n        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice;\n\n    /** Built-in method references that are mockable. */\n    var setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetPrototype = Object.getPrototypeOf,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = Object.keys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReplace = stringProto.replace,\n        nativeReverse = arrayProto.reverse,\n        nativeSplit = stringProto.split;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,\n     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,\n     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,\n     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,\n     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,\n     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,\n     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,\n     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,\n     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      return getMapData(this, key)['delete'](key);\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      getMapData(this, key).set(key, value);\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      this.__data__ = new ListCache(entries);\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      return this.__data__['delete'](key);\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var cache = this.__data__;\n      if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {\n        cache = this.__data__ = new MapCache(cache.__data__);\n      }\n      cache.set(key, value);\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n      }\n      // Recursively populate clone (susceptible to call stack limits).\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source),\n          length = props.length;\n\n      return function(object) {\n        if (object == null) {\n          return !length;\n        }\n        var index = length;\n        while (index--) {\n          var key = props[index],\n              predicate = source[key],\n              value = object[key];\n\n          if ((value === undefined &&\n              !(key in Object(object))) || !predicate(value)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(proto) {\n      return isObject(proto) ? objectCreate(proto) : {};\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an array\n     * of `func` arguments.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments to provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n      // that are composed entirely of index properties, return `false` for\n      // `hasOwnProperty` checks of them.\n      return object != null &&\n        (hasOwnProperty.call(object, key) ||\n          (typeof object == 'object' && key in object && getPrototype(object) === null));\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = castPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[toKey(path)];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      return nativeKeys(Object(object));\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      object = object == null ? object : Object(object);\n\n      var result = [];\n      for (var key in object) {\n        result.push(key);\n      }\n      return result;\n    }\n\n    // Fallback for IE < 9 with es6-shim.\n    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n      baseKeysIn = function(object) {\n        return iteratorToArray(enumerate(object));\n      };\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      if (!(isArray(source) || isTypedArray(source))) {\n        var props = keysIn(source);\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      stack.set(srcValue, newValue);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n      }\n      stack['delete'](srcValue);\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce `n` to an integer.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return arrayReduce(props, function(result, key) {\n        if (key in object) {\n          result[key] = object[key];\n        }\n        return result;\n      }, {});\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, predicate) {\n      var index = -1,\n          props = getAllKeysIn(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (predicate(value, key)) {\n          result[key] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = castPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[toKey(last(path))];\n            }\n          }\n          else {\n            delete array[toKey(index)];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]);\n        if (isObject(nested)) {\n          var newValue = value;\n          if (index != lastIndex) {\n            var objValue = nested[key];\n            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n            if (newValue === undefined) {\n              newValue = objValue == null\n                ? (isIndex(path[index + 1]) ? [] : {})\n                : objValue;\n            }\n          }\n          assignValue(nested, key, newValue);\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      object = parent(object, path);\n\n      var key = toKey(last(path));\n      return !(object != null && baseHas(object, key)) || delete object[key];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var result = new buffer.constructor(buffer.length);\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : source[key];\n\n        assignValue(object, key, newValue);\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return rest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBaseWrapper(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = reHasComplexSymbol.test(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurryWrapper(func, bitmask, arity) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        predicate = getIteratee(predicate, 3);\n        if (!isArrayLike(collection)) {\n          var props = keys(collection);\n        }\n        var index = findIndexFunc(props || collection, function(value, key) {\n          if (props) {\n            key = value;\n            value = iterable[key];\n          }\n          return predicate(value, key, iterable);\n        }, fromIndex);\n        return index > -1 ? collection[props ? props[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return rest(function(funcs) {\n        funcs = baseFlatten(funcs, 1);\n\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return 0;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return rest(function(iteratees) {\n        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n          : arrayMap(baseFlatten(iteratees, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\n        return rest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return reHasComplexSymbol.test(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toNumber(start);\n        start = start === start ? start : 0;\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toNumber(end) || 0;\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     *   512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBaseWrapper(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurryWrapper(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartialWrapper(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!seen.has(othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.add(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and\n          // booleans to `1` or `0` treating invalid dates coerced to `NaN` as\n          // not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object) ? other != +other : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= UNORDERED_COMPARE_FLAG;\n          stack.set(object, other);\n\n          // Recursively compare objects (susceptible to call stack limits).\n          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : baseHas(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      return result;\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a\n     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n     * Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the `[[Prototype]]` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {null|Object} Returns the `[[Prototype]]`.\n     */\n    function getPrototype(value) {\n      return nativeGetPrototype(Object(value));\n    }\n\n    /**\n     * Creates an array of the own enumerable symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    function getSymbols(object) {\n      // Coerce `object` to an object to avoid non-object errors in V8.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.\n      return getOwnPropertySymbols(Object(object));\n    }\n\n    // Fallback for IE < 11.\n    if (!getOwnPropertySymbols) {\n      getSymbols = stubArray;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable symbol properties\n     * of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function getTag(value) {\n      return objectToString.call(value);\n    }\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11,\n    // for data views in Edge, and promises in Node.js.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var result,\n          index = -1,\n          length = path.length;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result) {\n        return result;\n      }\n      var length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isString(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Creates an array of index keys for `object` values of arrays,\n     * `arguments` objects, and strings, otherwise `null` is returned.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array|null} Returns index keys, else `null`.\n     */\n    function indexKeys(object) {\n      var length = object ? object.length : undefined;\n      if (isLength(length) &&\n          (isArray(object) || isString(object) || isArguments(object))) {\n        return baseTimes(length, String);\n      }\n      return null;\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value);\n    }\n\n    /**\n     * Checks if `value` is a flattenable array and not a `_.matchesProperty`\n     * iteratee shorthand.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenableIteratee(value) {\n      return isArray(value) && !(value.length == 2 && !isFunction(value[0]));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));\n      }\n      return objValue;\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoize(function(string) {\n      var result = [];\n      toString(string).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length,\n          args = Array(length ? length - 1 : 0),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return length\n        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other given\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = rest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. Result values\n     * are chosen from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = rest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = rest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = rest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. Result values are chosen\n     * from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = rest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = (\n          index < 0\n            ? nativeMax(length + index, 0)\n            : nativeMin(index, length - 1)\n        ) + 1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index - 1, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = rest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = rest(function(array, indexes) {\n      indexes = baseFlatten(indexes, 1);\n\n      var length = array ? array.length : 0,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = rest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each\n     * element is kept.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = rest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = rest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = rest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = rest(function(paths) {\n      paths = baseFlatten(paths, 1);\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _([1, 2]).forEach(function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function, it's\n     * invoked for and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = rest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getIteratee(predicate, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var array = isArrayLike(collection) ? collection : values(collection),\n          length = array.length;\n\n      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = baseClamp(toInteger(n), 0, length);\n      }\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sampleSize(collection, MAX_ARRAY_LENGTH);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        var result = collection.length;\n        return (result && isString(collection)) ? stringSize(collection) : result;\n      }\n      if (isObjectLike(collection)) {\n        var tag = getTag(collection);\n        if (tag == mapTag || tag == setTag) {\n          return collection.size;\n        }\n      }\n      return keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [iteratees=[_.identity]] The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, function(o) { return o.user; });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     *\n     * _.sortBy(users, 'user', function(o) {\n     *   return Math.floor(o.age / 10);\n     * });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    var sortBy = rest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n        ? iteratees[0]\n        : baseFlatten(iteratees, 1, isFlattenableIteratee);\n\n      return baseOrderBy(collection, iteratees, []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    function now() {\n      return Date.now();\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = rest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = rest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide an options object to indicate whether `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent calls\n     * to the debounced function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one or more milliseconds.\n     */\n    var defer = rest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = rest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrapper(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with arguments transformed by\n     * corresponding `transforms`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [transforms[_.identity]] The functions to transform.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = rest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return rest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = rest(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, array);\n          case 1: return func.call(this, args[0], array);\n          case 2: return func.call(this, args[0], args[1], array);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = array;\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return rest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide an options object to indicate whether\n     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @type {Function}\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    function isArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value)) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = !Buffer ? stubFalse : function(value) {\n      return value instanceof Buffer;\n    };\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element,\n     *  else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || isString(value) || isFunction(value.splice) ||\n            isArguments(value) || isBuffer(value))) {\n        return !value.length;\n      }\n      if (isObjectLike(value)) {\n        var tag = getTag(value);\n        if (tag == mapTag || tag == setTag) {\n          return !value.size;\n        }\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return !(nonEnumShadows && keys(value).length);\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object,\n     *  else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number,\n     *  else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length,\n     *  else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    function isMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values. This method is\n     * equivalent to a `_.matches` function when `source` is partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the\n     * presence of the `core-js` package because `core-js` circumvents this kind\n     * of detection. Despite multiple requests, the `core-js` maintainer has made\n     * it clear: any attempt to fix the detection will be obstructed. As a result,\n     * we're left with little choice but to throw an error. Unfortunately, this\n     * also affects packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on `core-js`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error('This method is not supported with `core-js`. Try https://github.com/es-shims.');\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object,\n     *  else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) ||\n          objectToString.call(value) != objectTag || isHostObject(value)) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer,\n     *  else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    function isSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.c = 3;\n     * }\n     *\n     * function Bar() {\n     *   this.e = 5;\n     * }\n     *\n     * Foo.prototype.d = 4;\n     * Bar.prototype.f = 6;\n     *\n     * _.assign({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3, 'e': 5 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * function Bar() {\n     *   this.d = 4;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     * Bar.prototype.e = 5;\n     *\n     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keysIn(source), object);\n        return;\n      }\n      for (var key in source) {\n        assignValue(object, key, source[key]);\n      }\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = rest(function(object, paths) {\n      return baseAt(object, baseFlatten(paths, 1));\n    });\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = rest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = rest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = rest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      var isProto = isPrototype(object);\n      if (!(isProto || isArrayLike(object))) {\n        return baseKeys(object);\n      }\n      var indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      for (var key in object) {\n        if (baseHas(object, key) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(isProto && key == 'constructor')) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      var index = -1,\n          isProto = isPrototype(object),\n          props = baseKeysIn(object),\n          propsLength = props.length,\n          indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[iteratee(value, key, object)] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with seven arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable string keyed properties of `object` that are\n     * not omitted.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = rest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(baseFlatten(props, 1), toKey);\n      return basePick(object, baseDifference(getAllKeysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      predicate = getIteratee(predicate);\n      return basePickBy(object, function(value, key) {\n        return !predicate(value, key);\n      });\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = rest(function(object, props) {\n      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        object = undefined;\n        length = 1;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toNumber(start) || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toNumber(end) || 0;\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toNumber(lower) || 0;\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toNumber(upper) || 0;\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in IE < 9, they can break out of\n     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the\n     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = toString(string).replace(reTrim, '');\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (separator == '' && reHasComplexSymbol.test(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return nativeSplit.call(string, separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      return string.lastIndexOf(baseToString(target), position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (reHasComplexSymbol.test(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = rest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['onClick']);\n     * jQuery(element).on('click', view.onClick);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = rest(function(object, methodNames) {\n      arrayEach(baseFlatten(methodNames, 1), function(key) {\n        key = toKey(key);\n        object[key] = bind(object[key], object);\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.constant(true),                _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return rest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.filter(users, _.conforms({ 'age': function(n) { return n > 38; } }));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument given to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`. The created function is equivalent to\n     * `_.isMatch` with a `source` partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = rest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = rest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * A method that returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return rest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [iteratees=[_.identity]] The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [predicates=[_.identity]] The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [predicates=[_.identity]] The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * A method that returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * A method that returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * A method that returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * A method that returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * A method that returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    });\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    });\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    });\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    });\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.deburr = deburr;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      predicate = getIteratee(predicate, 3);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Expose Lodash on the free variable `window` or `self` when available so it's\n  // globally accessible, even when bundled with Browserify, Webpack, etc. This\n  // also prevents errors in cases where Lodash is loaded by a script tag in the\n  // presence of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch\n  // for more details. Use `_.noConflict` to remove Lodash from the global object.\n  (freeSelf || {})._ = _;\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],16:[function(require,module,exports){\n/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.2.1';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n}));\n\n},{}],17:[function(require,module,exports){\n'use strict';\n\n/*\n * ChordProJS - Parse and render ChordPro formatted songs.\n * Copyright (c) 2016 Tom Davies\n */\n\nvar Song = require('./lib/song');\n\n/**\n * Parse a ChordPro formatted string and return the generated Song object.\n * @param  {string}\t\tchordProStr\t\tThe ChordPro string to parse\n * @return {Song}\n */\nmodule.exports = {\n\tparse: function parse(chordProStr) {\n\t\tvar commentPattern = /^\\s*#.*/;\n\t\tvar chordPattern = /\\[([^\\]]*)\\]/;\n\t\tvar directivePattern = /^{([\\w]*):?(.*)?}/;\n\t\tvar song = new Song();\n\t\tvar section = song.createSection();\n\t\tvar line = null;\n\t\tvar chord = null;\n\n\t\tchordProStr.split(\"\\n\").forEach(function (lineText) {\n\t\t\tif (lineText.trim() < 1 && section.lines.length > 0) {\n\t\t\t\t// Start a new section\n\t\t\t\tsong.addSection(section);\n\t\t\t\tsection = song.createSection();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tline = song.createLine();\n\n\t\t\t// Ignore any comments\n\t\t\tif (!lineText.match(commentPattern)) {\n\t\t\t\t// Command line\n\t\t\t\tvar directive = lineText.match(directivePattern);\n\t\t\t\tif (directive) {\n\t\t\t\t\tvar directiveName = directive[1];\n\t\t\t\t\tvar directiveValue = directive[2];\n\t\t\t\t\t// Parse directive\n\t\t\t\t\tswitch (directiveName) {\n\t\t\t\t\t\tcase 'title':\n\t\t\t\t\t\tcase 'subtitle':\n\t\t\t\t\t\tcase 'album':\n\t\t\t\t\t\tcase 'author':\n\t\t\t\t\t\tcase 'copyright':\n\t\t\t\t\t\tcase 'key':\n\t\t\t\t\t\tcase 'tempo':\n\t\t\t\t\t\tcase 'time':\n\t\t\t\t\t\tcase 'keywords':\n\t\t\t\t\t\t\tsong[directiveName] = directiveValue;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'section':\n\t\t\t\t\t\t\tif (section.lines.length > 0) {\n\t\t\t\t\t\t\t\t// Start a new section\n\t\t\t\t\t\t\t\tsong.addSection(section);\n\t\t\t\t\t\t\t\tsection = song.createSection();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsection.name = directiveValue;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Lyrics/chords\n\t\t\t\t\tlineText.split(chordPattern).forEach(function (word, i) {\n\t\t\t\t\t\tif (i % 2 > 0) {\n\t\t\t\t\t\t\tif (word.length > 0) {\n\t\t\t\t\t\t\t\tchord = song.chords.createChord(word);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tchord = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (chord !== null || word.length > 0) {\n\t\t\t\t\t\t\tline.addLineSegment(song.createLineSegment(chord, word));\n\t\t\t\t\t\t\tchord = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (line.lineSegments.length > 0) {\n\t\t\t\tsection.addLine(line);\n\t\t\t}\n\t\t});\n\n\t\tsong.addSection(section);\n\n\t\treturn song;\n\t}\n};\n\n},{\"./lib/song\":19}],18:[function(require,module,exports){\n'use strict';\n\n/*\n * ChordProJS - Parse and render ChordPro formatted songs.\n * Copyright (c) 2016 Tom Davies\n *\n * chords.js\n * Module for processing chords in song, handling key detection and chord transposition.\n */\n\nvar _ = require('lodash'),\n    chordMagic = require('chord-magic');\n\nvar notes = ['A', 'Bb', 'B', 'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab'];\nvar sharps = ['A', 'B', 'D', 'E', 'G'];\nvar intervals = [{ step: 2, minor: true }, { step: 2, minor: true }, { step: 1 }, { step: 2 }, { step: 2, minor: true }, { step: 2 }, { step: 1 }];\n\nfunction getSharpEquivalent(chordText) {\n    return chordText.split(\"/\").map(function (val) {\n        if (val.indexOf('b') === 1) {\n            var idx = notes.indexOf(val.substring(0, 2)) - 1;\n\n            if (idx < 0) {\n                idx = notes.length - 1;\n            }\n\n            return notes[idx] + '#' + val.substring(2);\n        }\n\n        return val;\n    }).join(\"/\");\n}\n\nfunction getTranspose(origKey, targetKey) {\n    var origKeyIdx = notes.indexOf(origKey);\n    var targetKeyIdx = notes.indexOf(targetKey);\n\n    if (origKeyIdx > -1 && targetKeyIdx > -1) {\n        return targetKeyIdx - origKeyIdx;\n    }\n\n    return 0;\n}\n\nfunction getNoteInterval(note, interval) {\n    var i = notes.indexOf(note) + interval;\n\n    if (i >= notes.length) {\n        i = i - notes.length;\n    }\n\n    return notes[i];\n}\n\nfunction getScale(note, minor) {\n    var intervals = minor ? intervalsMinor : intervalsMajor;\n    var scale = [note];\n    var prevNote = note;\n\n    intervals.forEach(function (interval) {\n        prevNote = getNoteInterval(prevNote, interval.step);\n        scale.push(prevNote);\n    });\n\n    return scale;\n}\n\nfunction getKeysContainingChord(chord) {\n    var keys = [];\n\n    notes.forEach(function (key) {\n        var note = key;\n        // For each key, go over each chord and check for match\n        intervals.forEach(function (interval) {\n            note = getNoteInterval(note, interval.step);\n            var noteChord = note + (interval.minor ? 'm' : '');\n            if (chord === noteChord) {\n                // Add this key to keys\n                keys.push(key);\n                return;\n            }\n        });\n    });\n\n    return keys;\n}\n\nfunction getRootNote(chord) {\n    var note = chord.charAt(0);\n    var intonation = chord.charAt(1);\n\n    if (intonation === '#') {\n        intonation = 'b';\n        note = getNoteInterval(note, 2);\n    } else if (intonation !== 'b') {\n        intonation = '';\n    }\n\n    return note + intonation;\n}\n\nfunction findKey(chords) {\n    var keys = _.countBy(_.flatten(chords.map(function (chord) {\n        var note = getRootNote(chord);\n        chord = chord.substring(note.length);\n        if (chord.indexOf('m') === 0 && chord.indexOf('maj') !== 0 || chord.indexOf('min') === 0) {\n            note = note + 'm';\n        }\n\n        return getKeysContainingChord(note);\n    })));\n\n    // Return the most likely (most frequent) key for the chords passed in.\n    return _.maxBy(_.map(keys, function (val, key) {\n        return { key: key, count: val };\n    }), 'count').key;\n}\n\nfunction Chord(chordText, transposeProperties) {\n    this.transposeProperties = transposeProperties;\n    this.chordMagicked = chordMagic.parse(chordText);\n}\n\nChord.prototype.getText = function () {\n    var chord = this.chordMagicked;\n    var transpose = this.transposeProperties.transpose;\n\n    if (this.transposeProperties.targetKey !== null) {\n        // Work out transpose from original key\n        transpose = getTranspose(this.transposeProperties.origKey, this.transposeProperties.targetKey);\n    } else {\n        // Get the target key from the transpose\n        this.transposeProperties.targetKey = chordMagic.prettyPrint(chordMagic.transpose(chordMagic.parse(this.transposeProperties.origKey), transpose));\n    }\n\n    if (transpose !== 0) {\n        chord = chordMagic.transpose(this.chordMagicked, transpose);\n    }\n\n    var chordText = chordMagic.prettyPrint(chord);\n\n    if (chordText.length > 1 && chordText.indexOf('b') > -1 && sharps.indexOf(this.transposeProperties.targetKey) > -1) {\n        chordText = getSharpEquivalent(chordText);\n    }\n\n    return chordText;\n};\n\nChord.prototype.getOrigText = function () {\n    return chordMagic.prettyPrint(this.chordMagicked);\n};\n\nfunction Chords() {\n    this.chords = [];\n    this.transposeProperties = {\n        origKey: '',\n        targetKey: null,\n        transpose: 0\n    };\n}\n\nChords.prototype.getOrigKey = function () {\n    return this.transposeProperties.origKey;\n};\n\nChords.prototype.getTargetKey = function () {\n    return this.transposeProperties.targetKey;\n};\n\nChords.prototype.setTargetKey = function (targetKey) {\n    targetKey = chordMagic.parse(targetKey).root;\n    if (notes.indexOf(targetKey) > -1) {\n        this.transposeProperties.targetKey = targetKey;\n    }\n};\n\nChords.prototype.setTranspose = function (transpose) {\n    this.transposeProperties.transpose = transpose;\n    this.transposeProperties.targetKey = null;\n};\n\nChords.prototype.createChord = function (chordText) {\n    var chord = new Chord(chordText, this.transposeProperties);\n    this.chords.push(chord);\n    // Detect key\n    this.transposeProperties.origKey = findKey(this.chords.map(function (chord) {\n        return chord.getOrigText();\n    }));\n    return chord;\n};\n\nmodule.exports = Chords;\n\n},{\"chord-magic\":7,\"lodash\":15}],19:[function(require,module,exports){\n'use strict';\n\n/*\n * ChordProJS - Parse and render ChordPro formatted songs.\n * Copyright (c) 2016 Tom Davies\n *\n * song.js\n * Classes for Song, Section, Line, and LineSegment - the data structures for the parsed song.\n */\n\nvar Chords = require('./chords'),\n    _ = require('lodash'),\n    mustache = require('mustache');\n\nfunction Section() {\n\tthis.name = \"\";\n\tthis.lines = [];\n}\n\nSection.prototype.addLine = function (line) {\n\tthis.lines.push(line);\n};\n\nfunction Line() {\n\tthis.lineSegments = [];\n}\n\nLine.prototype.addLineSegment = function (lineSegment) {\n\tthis.lineSegments.push(lineSegment);\n};\n\nfunction LineSegment(chord, text) {\n\tthis.chord = chord;\n\tthis.text = text;\n}\n\nfunction Song() {\n\tthis.title = '';\n\tthis.subtitle = '';\n\tthis.album = '';\n\tthis.author = '';\n\tthis.copyright = '';\n\tthis.key = '';\n\tthis.tempo = '';\n\tthis.time = '';\n\tthis.keywords = '';\n\tthis.sections = [];\n\tthis.chords = new Chords();\n}\n\nSong.prototype.addSection = function (section) {\n\tthis.sections.push(section);\n};\n\nSong.prototype.createSection = function () {\n\treturn new Section();\n};\n\nSong.prototype.createLine = function () {\n\treturn new Line();\n};\n\nSong.prototype.createLineSegment = function (chord, text) {\n\treturn new LineSegment(chord, text);\n};\n\nSong.prototype.render = function (songTemplate, transpose) {\n\t// Is songTemplate a template, or is it a transpose property?\n\tif (_.isUndefined(transpose) && !_.isUndefined(songTemplate) && (_.isString(songTemplate) && songTemplate.length < 3 || _.isNumber(songTemplate))) {\n\t\ttranspose = songTemplate;\n\t\tsongTemplate = null;\n\t}\n\n\tvar song = this;\n\tsongTemplate = songTemplate || '{{#song}}\\n' + '<div class=\"song\">\\n' + '<div class=\"song-heading\">' + '<h1 class=\"song-title\">{{title}}</h1>\\n' + '<h3 class=\"song-subtitle\">({{subtitle}})</h3>\\n' + '</div>' + '{{#sections}}\\n' + '<div class=\"song-section\">\\n' + '<h3 class=\"song-section-name\">{{name}}</h3>\\n' + '{{#lines}}\\n' + '<table class=\"song-line\" cellspacing=\"0\" cellpadding=\"0\">\\n' + '<tr class=\"song-chords\">\\n' + '{{#lineSegments}}\\n' + '<td>{{{formattedChord}}}</td>\\n' + '{{/lineSegments}}\\n' + '</tr>\\n' + '<tr class=\"song-text\">\\n' + '{{#lineSegments}}\\n' + '<td><span class=\"song-text-segment\">{{{formattedText}}}</span></td>\\n' + '{{/lineSegments}}\\n' + '</tr>\\n' + '</table>\\n' + '{{/lines}}\\n' + '</div>\\n' + '{{/sections}}\\n' + '</div>' + '{{/song}}';\n\n\tif (_.isNumber(transpose)) {\n\t\tsong.chords.setTranspose(transpose);\n\t} else if (_.isString(transpose)) {\n\t\tsong.chords.setTargetKey(transpose);\n\t}\n\n\treturn mustache.render(songTemplate, {\n\t\tsong: song,\n\t\tformattedChord: function formattedChord() {\n\t\t\tif (this.chord !== null) {\n\t\t\t\treturn this.chord.getText().split('').map(function (value) {\n\t\t\t\t\tif (value === '#') {\n\t\t\t\t\t\treturn '<span class=\"music-symbol\" style=\"font-family: Arial Unicode MS, Lucida Sans Unicode;\">♯</span>';\n\t\t\t\t\t} else if (value === \"b\") {\n\t\t\t\t\t\treturn '<span class=\"music-symbol\" style=\"font-family: Arial Unicode MS, Lucida Sans Unicode;\">♭</span>';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn value;\n\t\t\t\t}).join('') + '&nbsp;';\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\t\tformattedText: function formattedText() {\n\t\t\t// If there are leading or trailing spaces, replace with &nbsp;\n\t\t\t// Check for leading spaces\n\t\t\tvar leadingSpaceCount = this.text.search(/\\S|$/);\n\t\t\tvar trailingSpaceCount = this.text.length - (leadingSpaceCount + this.text.trim().length);\n\t\t\tvar newText;\n\t\t\tvar i;\n\n\t\t\tif (leadingSpaceCount > 0) {\n\t\t\t\tnewText = '';\n\t\t\t\tfor (i = 0; i < leadingSpaceCount; i++) {\n\t\t\t\t\tnewText = newText + '&nbsp;';\n\t\t\t\t}\n\t\t\t\tnewText = newText + this.text.trim();\n\t\t\t} else {\n\t\t\t\tnewText = this.text.trim();\n\t\t\t}\n\n\t\t\t// Check for trailing spaces\n\t\t\tif (trailingSpaceCount > 0) {\n\t\t\t\tfor (i = 0; i < trailingSpaceCount; i++) {\n\t\t\t\t\tnewText = newText + '&nbsp;';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn newText;\n\t\t}\n\t});\n};\n\nmodule.exports = Song;\n\n},{\"./chords\":18,\"lodash\":15,\"mustache\":16}]},{},[17])(17)\n});"],"sourceRoot":"/source/"}